/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 26 13:22:26 GMT 2024
 */

package org.jfree.data.xy;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfree.data.xy.XYInterval;
import org.junit.runner.RunWith;

public class XYInterval_ESTest {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      XYInterval xYInterval0 = new XYInterval(0.0, 0.0, 0.0, 0.0, (-1.0));
      XYInterval xYInterval1 = new XYInterval(0.0, 0.0, 0.0, 0.0, 0.0);
      boolean boolean0 = xYInterval1.equals(xYInterval0);
      assertEquals(0.0, xYInterval0.getXHigh(), 0.01);
      assertEquals(0.0, xYInterval0.getXLow(), 0.01);
      assertEquals(0.0, xYInterval0.getYLow(), 0.01);
      assertEquals(0.0, xYInterval0.getY(), 0.01);
      assertEquals(0.0, xYInterval1.getYHigh(), 0.01);
      assertFalse(xYInterval0.equals((Object)xYInterval1));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      XYInterval xYInterval0 = new XYInterval((-2113.58985188065), 0.0, 0.0, (-2113.58985188065), 0.0);
      XYInterval xYInterval1 = new XYInterval((-2113.58985188065), 0.0, 0.0, 406.177995785, 0.0);
      boolean boolean0 = xYInterval0.equals(xYInterval1);
      assertEquals((-2113.58985188065), xYInterval1.getXLow(), 0.01);
      assertEquals(0.0, xYInterval1.getXHigh(), 0.01);
      assertFalse(boolean0);
      assertEquals(0.0, xYInterval1.getYHigh(), 0.01);
      assertFalse(xYInterval1.equals((Object)xYInterval0));
      assertEquals(406.177995785, xYInterval1.getYLow(), 0.01);
      assertEquals(0.0, xYInterval1.getY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      XYInterval xYInterval0 = new XYInterval((-411.7160242), (-411.7160242), 0.0, 0.0, (-411.7160242));
      XYInterval xYInterval1 = new XYInterval((-411.7160242), (-411.7160242), 746.54002031, 642.5041902485546, 1.0);
      boolean boolean0 = xYInterval0.equals(xYInterval1);
      assertEquals(746.54002031, xYInterval1.getY(), 0.01);
      assertFalse(boolean0);
      assertEquals(1.0, xYInterval1.getYHigh(), 0.01);
      assertEquals((-411.7160242), xYInterval1.getXLow(), 0.01);
      assertEquals((-411.7160242), xYInterval1.getXHigh(), 0.01);
      assertEquals(642.5041902485546, xYInterval1.getYLow(), 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      XYInterval xYInterval0 = new XYInterval((-1.0), (-1.0), (-1.0), 0.0, (-1.0));
      XYInterval xYInterval1 = new XYInterval((-1.0), 0.0, 3152.39488162, (-1.0), (-1.0));
      boolean boolean0 = xYInterval0.equals(xYInterval1);
      assertFalse(boolean0);
      assertEquals((-1.0), xYInterval0.getYHigh(), 0.01);
      assertEquals(3152.39488162, xYInterval1.getY(), 0.01);
      assertEquals((-1.0), xYInterval1.getYHigh(), 0.01);
      assertEquals(0.0, xYInterval1.getXHigh(), 0.01);
      assertEquals((-1.0), xYInterval0.getXLow(), 0.01);
      assertEquals(0.0, xYInterval0.getYLow(), 0.01);
      assertEquals((-1.0), xYInterval1.getXLow(), 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      XYInterval xYInterval0 = new XYInterval(0.0, 0.0, (-327.11), (-371.2), (-1.0));
      XYInterval xYInterval1 = new XYInterval((-327.11), (-371.2), (-1.0), 1.0, (-371.2));
      boolean boolean0 = xYInterval0.equals(xYInterval1);
      assertFalse(boolean0);
      assertEquals((-327.11), xYInterval1.getXLow(), 0.01);
      assertEquals((-1.0), xYInterval1.getY(), 0.01);
      assertEquals((-371.2), xYInterval1.getXHigh(), 0.01);
      assertEquals((-1.0), xYInterval0.getYHigh(), 0.01);
      assertEquals(0.0, xYInterval0.getXHigh(), 0.01);
      assertEquals(1.0, xYInterval1.getYLow(), 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      XYInterval xYInterval0 = new XYInterval(1.0, 1.0, 1.0, 1.0, 1.0);
      double double0 = xYInterval0.getYLow();
      assertEquals(1.0, xYInterval0.getY(), 0.01);
      assertEquals(1.0, xYInterval0.getXLow(), 0.01);
      assertEquals(1.0, double0, 0.01);
      assertEquals(1.0, xYInterval0.getXHigh(), 0.01);
      assertEquals(1.0, xYInterval0.getYHigh(), 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      XYInterval xYInterval0 = new XYInterval((-2113.58985188065), 0.0, 0.0, (-2113.58985188065), 0.0);
      double double0 = xYInterval0.getYLow();
      assertEquals((-2113.58985188065), double0, 0.01);
      assertEquals(0.0, xYInterval0.getYHigh(), 0.01);
      assertEquals(0.0, xYInterval0.getY(), 0.01);
      assertEquals((-2113.58985188065), xYInterval0.getXLow(), 0.01);
      assertEquals(0.0, xYInterval0.getXHigh(), 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      XYInterval xYInterval0 = new XYInterval(216.63994329, 216.63994329, 1.0, 347.28, 79.45707094);
      double double0 = xYInterval0.getYHigh();
      assertEquals(347.28, xYInterval0.getYLow(), 0.01);
      assertEquals(1.0, xYInterval0.getY(), 0.01);
      assertEquals(216.63994329, xYInterval0.getXHigh(), 0.01);
      assertEquals(79.45707094, double0, 0.01);
      assertEquals(216.63994329, xYInterval0.getXLow(), 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      XYInterval xYInterval0 = new XYInterval(0.0, 0.0, 0.0, 0.0, (-1.0));
      double double0 = xYInterval0.getYHigh();
      assertEquals(0.0, xYInterval0.getYLow(), 0.01);
      assertEquals(0.0, xYInterval0.getXLow(), 0.01);
      assertEquals(0.0, xYInterval0.getY(), 0.01);
      assertEquals((-1.0), double0, 0.01);
      assertEquals(0.0, xYInterval0.getXHigh(), 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      XYInterval xYInterval0 = new XYInterval(1.0, 1.0, 1.0, 1.0, 1.0);
      double double0 = xYInterval0.getY();
      assertEquals(1.0, xYInterval0.getXHigh(), 0.01);
      assertEquals(1.0, xYInterval0.getXLow(), 0.01);
      assertEquals(1.0, double0, 0.01);
      assertEquals(1.0, xYInterval0.getYHigh(), 0.01);
      assertEquals(1.0, xYInterval0.getYLow(), 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      XYInterval xYInterval0 = new XYInterval((-328.17504170968), (-328.17504170968), (-328.17504170968), (-328.17504170968), (-186.79));
      double double0 = xYInterval0.getY();
      assertEquals((-328.17504170968), double0, 0.01);
      assertEquals((-328.17504170968), xYInterval0.getXLow(), 0.01);
      assertEquals((-186.79), xYInterval0.getYHigh(), 0.01);
      assertEquals((-328.17504170968), xYInterval0.getXHigh(), 0.01);
      assertEquals((-328.17504170968), xYInterval0.getYLow(), 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      XYInterval xYInterval0 = new XYInterval(1.0, 1.0, 1.0, 1.0, 1.0);
      double double0 = xYInterval0.getXLow();
      assertEquals(1.0, xYInterval0.getYHigh(), 0.01);
      assertEquals(1.0, xYInterval0.getXHigh(), 0.01);
      assertEquals(1.0, xYInterval0.getY(), 0.01);
      assertEquals(1.0, xYInterval0.getYLow(), 0.01);
      assertEquals(1.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      XYInterval xYInterval0 = new XYInterval((-2113.58985188065), 0.0, 0.0, (-2113.58985188065), 0.0);
      double double0 = xYInterval0.getXLow();
      assertEquals(0.0, xYInterval0.getY(), 0.01);
      assertEquals((-2113.58985188065), double0, 0.01);
      assertEquals(0.0, xYInterval0.getXHigh(), 0.01);
      assertEquals(0.0, xYInterval0.getYHigh(), 0.01);
      assertEquals((-2113.58985188065), xYInterval0.getYLow(), 0.01);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      XYInterval xYInterval0 = new XYInterval((-1649.33447), 1.0, 1.0, (-1649.33447), (-1649.33447));
      double double0 = xYInterval0.getXHigh();
      assertEquals((-1649.33447), xYInterval0.getYHigh(), 0.01);
      assertEquals(1.0, xYInterval0.getY(), 0.01);
      assertEquals(1.0, double0, 0.01);
      assertEquals((-1649.33447), xYInterval0.getYLow(), 0.01);
      assertEquals((-1649.33447), xYInterval0.getXLow(), 0.01);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      XYInterval xYInterval0 = new XYInterval((-1990.477205336798), (-1990.477205336798), (-1990.477205336798), (-1990.477205336798), (-1990.477205336798));
      double double0 = xYInterval0.getXHigh();
      assertEquals((-1990.477205336798), xYInterval0.getXLow(), 0.01);
      assertEquals((-1990.477205336798), double0, 0.01);
      assertEquals((-1990.477205336798), xYInterval0.getYHigh(), 0.01);
      assertEquals((-1990.477205336798), xYInterval0.getYLow(), 0.01);
      assertEquals((-1990.477205336798), xYInterval0.getY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      XYInterval xYInterval0 = new XYInterval(0.0, 0.0, 0.0, 0.0, (-1.0));
      XYInterval xYInterval1 = new XYInterval(0.0, 0.0, 0.0, 0.0, 0.0);
      boolean boolean0 = xYInterval0.equals(xYInterval1);
      assertEquals(0.0, xYInterval0.getYLow(), 0.01);
      assertEquals(0.0, xYInterval0.getXHigh(), 0.01);
      assertEquals(0.0, xYInterval0.getXLow(), 0.01);
      assertEquals(0.0, xYInterval0.getY(), 0.01);
      assertFalse(xYInterval1.equals((Object)xYInterval0));
      assertEquals(0.0, xYInterval1.getYHigh(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      XYInterval xYInterval0 = new XYInterval(1.0, 1.0, 1.0, 1.0, 1.0);
      XYInterval xYInterval1 = new XYInterval(1.0, 1.0, 1.0, (-1.0), 1.0);
      boolean boolean0 = xYInterval0.equals(xYInterval1);
      assertEquals(1.0, xYInterval1.getXHigh(), 0.01);
      assertEquals(1.0, xYInterval1.getYHigh(), 0.01);
      assertEquals((-1.0), xYInterval1.getYLow(), 0.01);
      assertEquals(1.0, xYInterval1.getY(), 0.01);
      assertFalse(xYInterval1.equals((Object)xYInterval0));
      assertEquals(1.0, xYInterval1.getXLow(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      XYInterval xYInterval0 = new XYInterval(0.0, 0.0, 0.0, 0.0, 0.0);
      XYInterval xYInterval1 = new XYInterval(0.0, 0.0, 0.0, 0.0, 0.0);
      boolean boolean0 = xYInterval0.equals(xYInterval1);
      assertEquals(0.0, xYInterval1.getXLow(), 0.01);
      assertEquals(0.0, xYInterval1.getY(), 0.01);
      assertEquals(0.0, xYInterval1.getYHigh(), 0.01);
      assertEquals(0.0, xYInterval1.getXHigh(), 0.01);
      assertEquals(0.0, xYInterval1.getYLow(), 0.01);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      XYInterval xYInterval0 = new XYInterval(0.14444757685763343, 0.14444757685763343, 0.14444757685763343, 0.14444757685763343, 0.14444757685763343);
      XYInterval xYInterval1 = new XYInterval(0.14444757685763343, (-0.5720316473847746), 0.14444757685763343, 0.14444757685763343, 0.14444757685763343);
      boolean boolean0 = xYInterval0.equals(xYInterval1);
      assertFalse(boolean0);
      assertEquals(0.14444757685763343, xYInterval1.getXLow(), 0.01);
      assertEquals(0.14444757685763343, xYInterval0.getXHigh(), 0.01);
      assertEquals(0.14444757685763343, xYInterval1.getYHigh(), 0.01);
      assertFalse(xYInterval1.equals((Object)xYInterval0));
      assertEquals(0.14444757685763343, xYInterval1.getYLow(), 0.01);
      assertEquals(0.14444757685763343, xYInterval1.getY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      XYInterval xYInterval0 = new XYInterval(0.0, 0.0, 0.0, 1.0, 0.0);
      XYInterval xYInterval1 = new XYInterval(3188.6933139090283, 1.0, 0.0, 1.0, 0.0);
      boolean boolean0 = xYInterval0.equals(xYInterval1);
      assertEquals(1.0, xYInterval1.getXHigh(), 0.01);
      assertEquals(0.0, xYInterval1.getYHigh(), 0.01);
      assertEquals(0.0, xYInterval1.getY(), 0.01);
      assertEquals(3188.6933139090283, xYInterval1.getXLow(), 0.01);
      assertEquals(0.0, xYInterval0.getXHigh(), 0.01);
      assertEquals(1.0, xYInterval0.getYLow(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      XYInterval xYInterval0 = new XYInterval(0.0, 0.0, 0.0, 1.0, 0.0);
      boolean boolean0 = xYInterval0.equals((Object) null);
      assertEquals(0.0, xYInterval0.getXLow(), 0.01);
      assertEquals(0.0, xYInterval0.getXHigh(), 0.01);
      assertEquals(0.0, xYInterval0.getYHigh(), 0.01);
      assertEquals(0.0, xYInterval0.getY(), 0.01);
      assertEquals(1.0, xYInterval0.getYLow(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      XYInterval xYInterval0 = new XYInterval(0.0, 0.0, 0.0, 0.0, 0.0);
      boolean boolean0 = xYInterval0.equals(xYInterval0);
      assertTrue(boolean0);
      assertEquals(0.0, xYInterval0.getXLow(), 0.01);
      assertEquals(0.0, xYInterval0.getY(), 0.01);
      assertEquals(0.0, xYInterval0.getYLow(), 0.01);
      assertEquals(0.0, xYInterval0.getXHigh(), 0.01);
      assertEquals(0.0, xYInterval0.getYHigh(), 0.01);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      XYInterval xYInterval0 = new XYInterval(0.0, 0.0, 0.0, 1.0, 0.0);
      XYInterval xYInterval1 = new XYInterval(0.0, 0.0, (-27.10371036823), 0.0, 0.0);
      boolean boolean0 = xYInterval0.equals(xYInterval1);
      assertFalse(boolean0);
      assertEquals(0.0, xYInterval0.getXLow(), 0.01);
      assertEquals((-27.10371036823), xYInterval1.getY(), 0.01);
      assertEquals(0.0, xYInterval0.getXHigh(), 0.01);
      assertEquals(1.0, xYInterval0.getYLow(), 0.01);
      assertEquals(0.0, xYInterval1.getXLow(), 0.01);
      assertEquals(0.0, xYInterval0.getYHigh(), 0.01);
      assertEquals(0.0, xYInterval1.getXHigh(), 0.01);
      assertEquals(0.0, xYInterval1.getYHigh(), 0.01);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      XYInterval xYInterval0 = new XYInterval(0.0, 0.0, 0.0, 0.0, 0.0);
      double double0 = xYInterval0.getYHigh();
      assertEquals(0.0, xYInterval0.getXLow(), 0.01);
      assertEquals(0.0, xYInterval0.getXHigh(), 0.01);
      assertEquals(0.0, xYInterval0.getY(), 0.01);
      assertEquals(0.0, double0, 0.01);
      assertEquals(0.0, xYInterval0.getYLow(), 0.01);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      XYInterval xYInterval0 = new XYInterval(0.0, 0.0, 0.0, 0.0, 0.0);
      double double0 = xYInterval0.getY();
      assertEquals(0.0, xYInterval0.getXLow(), 0.01);
      assertEquals(0.0, xYInterval0.getYLow(), 0.01);
      assertEquals(0.0, xYInterval0.getYHigh(), 0.01);
      assertEquals(0.0, double0, 0.01);
      assertEquals(0.0, xYInterval0.getXHigh(), 0.01);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      XYInterval xYInterval0 = new XYInterval(0.0, 0.0, 0.0, 0.0, (-1.0));
      double double0 = xYInterval0.getXLow();
      assertEquals(0.0, xYInterval0.getY(), 0.01);
      assertEquals(0.0, xYInterval0.getYLow(), 0.01);
      assertEquals((-1.0), xYInterval0.getYHigh(), 0.01);
      assertEquals(0.0, xYInterval0.getXHigh(), 0.01);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      XYInterval xYInterval0 = new XYInterval(0.0, 0.0, 0.0, 0.0, (-1.0));
      double double0 = xYInterval0.getXHigh();
      assertEquals(0.0, xYInterval0.getXLow(), 0.01);
      assertEquals(0.0, xYInterval0.getYLow(), 0.01);
      assertEquals(0.0, xYInterval0.getY(), 0.01);
      assertEquals(0.0, double0, 0.01);
      assertEquals((-1.0), xYInterval0.getYHigh(), 0.01);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      XYInterval xYInterval0 = new XYInterval(0.0, 0.0, 0.0, 0.0, (-1.0));
      double double0 = xYInterval0.getYLow();
      assertEquals(0.0, xYInterval0.getXLow(), 0.01);
      assertEquals(0.0, xYInterval0.getY(), 0.01);
      assertEquals(0.0, double0, 0.01);
      assertEquals((-1.0), xYInterval0.getYHigh(), 0.01);
      assertEquals(0.0, xYInterval0.getXHigh(), 0.01);
  }
}
