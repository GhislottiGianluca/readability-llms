/*
 * This file was automatically generated by EvoSuite
 * Tue Apr 30 12:16:34 GMT 2024
 */

package org.jfree.chart.renderer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.geom.Point2D;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfree.chart.renderer.Outlier;
import org.jfree.chart.renderer.OutlierListCollection;
import org.junit.runner.RunWith;

public class OutlierListCollection_ESTest {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      OutlierListCollection outlierListCollection0 = new OutlierListCollection();
      assertFalse(outlierListCollection0.isHighFarOut());
      
      outlierListCollection0.setHighFarOut(true);
      boolean boolean0 = outlierListCollection0.isHighFarOut();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      OutlierListCollection outlierListCollection0 = new OutlierListCollection();
      Outlier outlier0 = new Outlier((-2843.4604496285833), (-1811.5624821854), (-2843.4604496285833));
      outlier0.setPoint((Point2D) null);
      outlierListCollection0.add(outlier0);
      // Undeclared exception!
      try { 
        outlierListCollection0.add(outlier0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.Outlier", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      OutlierListCollection outlierListCollection0 = new OutlierListCollection();
      Outlier outlier0 = new Outlier((-4955.761099050333), (-4955.761099050333), (-4955.761099050333));
      outlierListCollection0.add(outlier0);
      boolean boolean0 = outlierListCollection0.add(outlier0);
      assertFalse(outlierListCollection0.isHighFarOut());
      assertTrue(boolean0);
      assertFalse(outlierListCollection0.isLowFarOut());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      OutlierListCollection outlierListCollection0 = new OutlierListCollection();
      boolean boolean0 = outlierListCollection0.isHighFarOut();
      assertFalse(outlierListCollection0.isLowFarOut());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      OutlierListCollection outlierListCollection0 = new OutlierListCollection();
      Outlier outlier0 = new Outlier((-4955.761099050333), (-4955.761099050333), (-4955.761099050333));
      outlierListCollection0.add(outlier0);
      outlier0.setRadius(13.580197038010901);
      boolean boolean0 = outlierListCollection0.add(outlier0);
      assertFalse(outlierListCollection0.isLowFarOut());
      assertTrue(boolean0);
      assertFalse(outlierListCollection0.isHighFarOut());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      OutlierListCollection outlierListCollection0 = new OutlierListCollection();
      boolean boolean0 = outlierListCollection0.isLowFarOut();
      assertFalse(outlierListCollection0.isHighFarOut());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      OutlierListCollection outlierListCollection0 = new OutlierListCollection();
      outlierListCollection0.iterator();
      assertFalse(outlierListCollection0.isHighFarOut());
      assertFalse(outlierListCollection0.isLowFarOut());
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      OutlierListCollection outlierListCollection0 = new OutlierListCollection();
      assertFalse(outlierListCollection0.isLowFarOut());
      
      outlierListCollection0.setLowFarOut(true);
      boolean boolean0 = outlierListCollection0.isLowFarOut();
      assertTrue(boolean0);
  }
}
