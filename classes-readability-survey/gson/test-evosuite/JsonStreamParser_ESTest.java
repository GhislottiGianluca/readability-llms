/*
 * This file was automatically generated by EvoSuite
 * Tue Apr 30 12:02:47 GMT 2024
 */

package com.google.gson.internal;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.gson.JsonElement;
import com.google.gson.JsonStreamParser;
import java.io.Reader;
import java.io.StringReader;
import java.util.NoSuchElementException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

public class JsonStreamParser_ESTest {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      StringReader stringReader0 = new StringReader(":xCKI'^[S6:_?ak%");
      JsonStreamParser jsonStreamParser0 = new JsonStreamParser(stringReader0);
      try { 
        jsonStreamParser0.next();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // org.evosuite.runtime.mock.java.lang.MockThrowable: Expected value at line 1 column 1 path $
         //
         verifyException("com.google.gson.JsonStreamParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      JsonStreamParser jsonStreamParser0 = new JsonStreamParser("+{r=SkvC}U$lM");
      jsonStreamParser0.next();
      JsonElement jsonElement0 = jsonStreamParser0.next();
      assertFalse(jsonElement0.isJsonPrimitive());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      JsonStreamParser jsonStreamParser0 = new JsonStreamParser("null");
      JsonElement jsonElement0 = jsonStreamParser0.next();
      assertFalse(jsonElement0.isJsonPrimitive());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      JsonStreamParser jsonStreamParser0 = new JsonStreamParser("Bznbq[,]< 8Yb_#:");
      jsonStreamParser0.next();
      JsonElement jsonElement0 = jsonStreamParser0.next();
      assertFalse(jsonElement0.isJsonPrimitive());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      JsonStreamParser jsonStreamParser0 = null;
      try {
        jsonStreamParser0 = new JsonStreamParser((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      JsonStreamParser jsonStreamParser0 = null;
      try {
        jsonStreamParser0 = new JsonStreamParser((Reader) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // in == null
         //
         verifyException("com.google.gson.stream.JsonReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      StringReader stringReader0 = new StringReader("DB3.>N|^L-");
      JsonStreamParser jsonStreamParser0 = new JsonStreamParser(stringReader0);
      boolean boolean0 = jsonStreamParser0.hasNext();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      JsonStreamParser jsonStreamParser0 = new JsonStreamParser("{");
      // Undeclared exception!
      try { 
        jsonStreamParser0.next();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.gson.JsonStreamParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      JsonStreamParser jsonStreamParser0 = new JsonStreamParser("\"");
      try { 
        jsonStreamParser0.next();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // org.evosuite.runtime.mock.java.lang.MockThrowable: Unterminated string at line 1 column 2 path $
         //
         verifyException("com.google.gson.internal.Streams", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      JsonStreamParser jsonStreamParser0 = new JsonStreamParser("com.google.gson.JsonPrimitive");
      jsonStreamParser0.next();
      // Undeclared exception!
      try { 
        jsonStreamParser0.next();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.gson.JsonStreamParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      JsonStreamParser jsonStreamParser0 = new JsonStreamParser("x");
      jsonStreamParser0.next();
      boolean boolean0 = jsonStreamParser0.hasNext();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      JsonStreamParser jsonStreamParser0 = new JsonStreamParser("K");
      // Undeclared exception!
      try { 
        jsonStreamParser0.remove();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.gson.JsonStreamParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      JsonStreamParser jsonStreamParser0 = new JsonStreamParser("");
      // Undeclared exception!
      try { 
        jsonStreamParser0.hasNext();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.EOFException: End of input at line 1 column 1 path $
         //
         verifyException("com.google.gson.JsonStreamParser", e);
      }
  }
}
